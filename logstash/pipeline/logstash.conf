input {
  tcp {
		port => 5000
	}
  beats {
    port => 5044
  }
}

filter {
  #>>>>>>>> start type logs
  if [fields][index] == "logs"{
    grok {
      match => {"message"=> "%{TIMESTAMP_ISO8601:logTimestamp} %{DATA:logLevel} %{DATA:className}\:%{DATA:line} \[%{DATA:executor}\] - (?<details>(.|\r|\n)*)"}
    }
    date{ # use logTimestamp as the @timestamp value
      match => ["logTimestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
      target => "@timestamp"
    }
    mutate{ 
      add_field => {"filePath" => "%{[log][file][path]}"}
      add_field => {"fileType" => "%{[fields][index]}"}
      remove_field => ["input","agent","ecs","host","tags","@version", "fields", "message", "log"]
    }			

  }
  #<<<<<<<< end type logs

  #>>>>>>>> start type access
  if [fields][index] == "access"{
		grok {
			match => {
				"message"=> "%{IP:clientIP} - - \[%{HTTPDATE:accessTimestamp}\] \"%{WORD:method} %{GREEDYDATA:url} %{DATA:protocol}\" %{DATA:statusCode} %{NUMBER:idk}"
			}
		}
    date{
      match => ["accessTimestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
      target => "@timestamp"
    }

		mutate{ 
			add_field => {"filePath" => "%{[log][file][path]}"}
			add_field => {"fileType" => "%{[fields][index]}"}
			remove_field => ["input","agent","ecs","host","tags","@version", "fields", "message", "log"]	
		}


	}
  #<<<<<<<< end type access

  #>>>>>>>> start type csv
  if [fields][index] == "csv"{
		csv{
			separator => ","
			columns => ["STORE", "HYBRIS_SKU_CODE", "Current Available Stock Level", "Available to Sell", "Timestamp", "Allow Oversell"]	
		}
		# drop the first row, headers
		if [Timestamp] == "Timestamp"{
			drop{}
		}else{
      date{
        match => ["Timestamp", "yyyyMMddHHmmss"]
        target => "@timestamp"
      }
    }

		mutate{ 
			add_field => {"filePath" => "%{[log][file][path]}"}
			add_field => {"fileType" => "%{[fields][index]}"}
			remove_field => ["input","agent","ecs","host","tags","@version", "fields", "message", "log"]
			
		}
	}
  #<<<<<<<< end type csv
}





output {
  ######## type logs ########


  # as [fields][index] field has been removed, use [fileType] instead
  if [fileType] == "logs"{
    if [logLevel] in "ERROR"{
      file {
        path => "/usr/share/logstash/output-files/error_%{+yyyy_MM_dd}.json"
        codec => "json"
      }

    }else{
      file{
        path => "/usr/share/logstash/output-files/logs_%{+yyyy_MM_dd}.json"
        codec => "json"
      }
    }

    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "elastic"
      password => "changeme"
      index => "logs-%{+YYYY.MM}"
    }
  }
  ######## type logs ########

  #>>>>>>>> start type access
  else if [fileType] == "access"{
		file{
			path => "/usr/share/logstash/output-files/access_%{+yyyy_MM_dd}.json"
			codec => "json"	
		}

		elasticsearch {
			hosts => ["elasticsearch:9200"]
			user => "elastic"
			password => "changeme"
			index => "access-%{+YYYY.MM}"
		}
	}
  #<<<<<<<< end type access
  
  #>>>>>>>> start type csv
  else if [fileType] == "csv"{
		file{
			path => "/usr/share/logstash/output-files/imax_sku_stock_%{+yyyy_MM_dd}.json"
			codec => "json"	
		}

		elasticsearch {
			hosts => ["elasticsearch:9200"]
			user => "elastic"
			password => "changeme"
			index => "imax-sku-stock-%{+YYYY.MM}"
		}
	}
  #<<<<<<<< end type csv

}