input {
    # http_poller allows to call HTTP API, e.g. send request to ask for server status
  http{
	port => 31311
  }
}

filter {
    if [headers][request_path] == "/logs"{
        urldecode {
            add_field => { "message" => "%{message}" }
        }
        grok {
            match => {"message"=> "type=%{DATA:type}&log=%{TIMESTAMP_ISO8601:logTimestamp} %{DATA:logLevel} %{DATA:className}\:%{DATA:line} \[%{DATA:executor}\] - (?<details>(.|\r|\n)*)"}
        }
        date{ # use logTimestamp as the @timestamp value
            match => ["logTimestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
            target => "@timestamp"
        }
        mutate{ 
            add_field => {"requestPath" => "%{[headers][request_path]}"}
            add_field => {"requestType" => "%{[type]}"}
            remove_field => ["input","agent","ecs","host","tags","@version", "fields", "message", "log", "headers"]
        }	
    }
}

output {
    if [headers][request_path] == "/logs"{
        file{
            path => "/usr/share/logstash/output-files/http_logs_%{+yyyy_MM_dd}.json"
            codec => "json"	
        }

        elasticsearch {
            hosts => ["elasticsearch:9200"]
            user => "elastic"
            password => "changeme"
            index => "http-%{+YYYY.MM}"
        }   
        
    }
}